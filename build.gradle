import java.util.function.Predicate

group 'demo'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'com.asgradle.apkdist'
apply plugin: 'application'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenCentral()
}

/*
 * 用于gralde插件
 */
buildscript {
    repositories {
        mavenLocal()
        maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.asgradle',name: 'hello-gradle',version: '1.0.0'
    }
}


ext {
    gson_version = "2.3.1"
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile "com.google.code.gson:gson:$gson_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}




sourceSets{
    apkdistconfsource  {
        java {
            srcDirs = ['apkdistconfsource']
            compileClasspath += sourceSets.main.compileClasspath
            compileClasspath += fileTree("libs")
        }
    }
}


/*
 * 调用任务
 */
apkdistconf {
    nameMap { name ->
        println 'hello, ' + name
        return name
    }
    destDir sourceSets.apkdistconfsource
}

tasks.getByName("run") {
    doLast {


    }
}




gradle.beforeProject {
	project->
		println "hello before project:" +project
}

gradle.buildFinished {
	result->
		println "hello result:" +result
}

gradle.taskGraph.whenReady  {
	graph->
        println "fff"
        project.getConfigurations().each {
            println it.getName()
            it.getDependencies().each {
                println "getDependencies start"
                println it.getName()
                println "getDependencies end"
            }
            Closure c=  {
                return  it.name=='groovy-all22'
            };
            it.getDependencies().removeIf(c)
        }
}


mainClassName = 'HelloWorld'